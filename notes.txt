https://github.com/nnja/python
https://www.learnpython.dev/
nina - reddit, microsoft as cloud advocate focusing on python, also dev @ venmo
nina also teaches git in depth
https://frontendmasters.com/courses/git-in-depth/

THIS COURSE 
- python 3.7+ 

Python && catalina && homebrew...
https://opensource.com/article/19/5/python-3-default-mac


***
	virtual envs
***
- allow keeping dependencies of projecs in separate places

pip install virtualenv

***
creating a virtualenv project
***
virtualenv project-name -p /declare/path/to/python3/version

Jakes-3:py Jake$ virtualenv py-bits -p /usr/local/bin/python3
Running virtualenv with interpreter /usr/local/bin/python3
Using base prefix '/Library/Frameworks/Python.framework/Versions/3.8'
/Library/Python/2.7/site-packages/virtualenv.py:1039: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
New python executable in /Users/Jake/Desktop/projects/py/py-bits/bin/python3
Also creating executable in /Users/Jake/Desktop/projects/py/py-bits/bin/python

***
to activate virtualenv
***
source py-bits/bin/activate

Jakes-3:py Jake$ source py-bits/bin/activate
(py-bits) Jakes-3:py Jake$ 

**installing packages
pip install package-name
pip install requests

**
	a command
**
pip freeze > requirements.txt
then
cat requirementes.txt
will output all dependencies in the project
...
certifi==2019.11.28
chardet==3.0.4
idna==2.8
requests==2.22.0
urllib3==1.25.7
...
this can be included in the repo, like a package.json


**
	using the package.json text
**
pip install -r requirements.txt


**
	leaving a virtualenv
**
deactivate


**
	repl	
**
read
evaluate
print
loop

getting into the cli for python, use 'python'
getting out of the cli, use 'quit()'
print needs print('string here')

***
	getting the time
***
import datetime
now = datetime.datetime.now()
print(now)
2019-12-28 10:13:03.969756



**
	functions
**
def add(a,b):
    return a + b

add(3,4)
7

** 
	repl
** 
the cli for python in the terminal.
start by using 'python'


***
	***
		variables
	***
***

**
	null vars
**
- null is 'None' in Python
- checking for vars using the var == None is not a good way. Each var gets an id (find it by id(foo)). using the IS operator finds the val by id. using the == operator does a diff comparison?!....


** 
	arrs && appending && mutability
**
- an array/list gets an ID
- lists are mutable
- dictionaries are mutable
- strings/ints && tuples are immutable


02 @ 30:29, if/while looping